// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0
// source: users.sql

package db

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const createUser = `-- name: CreateUser :exec
INSERT INTO users (
	id, name, hashed_password, email, role
) VALUES (
	$1, $2, $3, $4, $5
)
`

type CreateUserParams struct {
	ID             pgtype.UUID
	Name           string
	HashedPassword string
	Email          string
	Role           UserRole
}

func (q *Queries) CreateUser(ctx context.Context, arg CreateUserParams) error {
	_, err := q.db.Exec(ctx, createUser,
		arg.ID,
		arg.Name,
		arg.HashedPassword,
		arg.Email,
		arg.Role,
	)
	return err
}

const getUserByEmail = `-- name: GetUserByEmail :one
SELECT id, name, hashed_password, email, role, created_at, updated_at FROM users WHERE email = $1
`

func (q *Queries) GetUserByEmail(ctx context.Context, email string) (User, error) {
	row := q.db.QueryRow(ctx, getUserByEmail, email)
	var i User
	err := row.Scan(
		&i.ID,
		&i.Name,
		&i.HashedPassword,
		&i.Email,
		&i.Role,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
